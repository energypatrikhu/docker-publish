#!/usr/bin/env bun
// @bun
var u=Object.create;var{getPrototypeOf:n,defineProperty:S,getOwnPropertyNames:r}=Object;var s=Object.prototype.hasOwnProperty;var i=(z,B,L)=>{L=z!=null?u(n(z)):{};let W=B||!z||!z.__esModule?S(L,"default",{value:z,enumerable:!0}):L;for(let X of r(z))if(!s.call(W,X))S(W,X,{get:()=>z[X],enumerable:!0});return W};var Z=(z,B)=>()=>(B||z((B={exports:{}}).exports,B),B.exports);var R=import.meta.require;var I=Z((N)=>{Object.defineProperty(N,"__esModule",{value:!0});N.default=void 0;var a=t(R("readline"));function t(z){return z&&z.__esModule?z:{default:z}}class K{constructor(z=process.stdin){this.stream=z,this.values=[],this.selectedValue=0,this.onSelectListener=()=>{},this.onKeyPress=this.onKeyPress.bind(this)}setValues(z){if(this.values=z,this.renderer)this.renderer.setValues(z)}setDefaultValue(z){this.selectedValue=z}attachRenderer(z){this.renderer=z,this.renderer.setValues(this.values)}onSelect(z){this.onSelectListener=z}open(){if(a.default.emitKeypressEvents(this.stream),this.stream.on("keypress",this.onKeyPress),this.renderer)this.renderer.render(this.selectedValue);this.stream.setRawMode(!0),this.stream.resume()}close(z=!1){if(this.stream.setRawMode(!1),this.stream.pause(),this.renderer)this.renderer.cleanup();if(z)this.onSelectListener(null);else this.onSelectListener(this.selectedValue,this.values[this.selectedValue]);this.stream.removeListener("keypress",this.onKeyPress)}render(){if(!this.renderer)return;this.renderer.render(this.selectedValue)}onKeyPress(z,B){if(B){if(B.name==="up"&&this.selectedValue>0)this.selectedValue--,this.render();else if(B.name==="down"&&this.selectedValue+1<this.values.length)this.selectedValue++,this.render();else if(B.name==="return")this.close();else if(B.name==="escape"||B.name==="c"&&B.ctrl)this.close(!0)}}}N.default=K});var _=Z((Rz,M)=>{var Q=Rz,U=process.env.TERM_PROGRAM==="Apple_Terminal";Q.cursorTo=(z,B)=>{if(typeof z!=="number")throw new TypeError("The `x` argument is required");if(typeof B!=="number")return"\x1B["+(z+1)+"G";return"\x1B["+(B+1)+";"+(z+1)+"H"};Q.cursorMove=(z,B)=>{if(typeof z!=="number")throw new TypeError("The `x` argument is required");let L="";if(z<0)L+="\x1B["+-z+"D";else if(z>0)L+="\x1B["+z+"C";if(B<0)L+="\x1B["+-B+"A";else if(B>0)L+="\x1B["+B+"B";return L};Q.cursorUp=(z)=>"\x1B["+(typeof z==="number"?z:1)+"A";Q.cursorDown=(z)=>"\x1B["+(typeof z==="number"?z:1)+"B";Q.cursorForward=(z)=>"\x1B["+(typeof z==="number"?z:1)+"C";Q.cursorBackward=(z)=>"\x1B["+(typeof z==="number"?z:1)+"D";Q.cursorLeft="\x1B[G";Q.cursorSavePosition="\x1B["+(U?"7":"s");Q.cursorRestorePosition="\x1B["+(U?"8":"u");Q.cursorGetPosition="\x1B[6n";Q.cursorNextLine="\x1B[E";Q.cursorPrevLine="\x1B[F";Q.cursorHide="\x1B[?25l";Q.cursorShow="\x1B[?25h";Q.eraseLines=(z)=>{let B="";for(let L=0;L<z;L++)B+=Q.eraseLine+(L<z-1?Q.cursorUp():"");if(z)B+=Q.cursorLeft;return B};Q.eraseEndLine="\x1B[K";Q.eraseStartLine="\x1B[1K";Q.eraseLine="\x1B[2K";Q.eraseDown="\x1B[J";Q.eraseUp="\x1B[1J";Q.eraseScreen="\x1B[2J";Q.scrollUp="\x1B[S";Q.scrollDown="\x1B[T";Q.clearScreen="\x1Bc";Q.clearTerminal=process.platform==="win32"?`${Q.eraseScreen}\x1B[0f`:`${Q.eraseScreen}\x1B[3J\x1B[H`;Q.beep="\x07";Q.link=(z,B)=>{return["\x1B]","8",";",";",B,"\x07",z,"\x1B]","8",";",";","\x07"].join("")};Q.image=(z,B)=>{B=B||{};let L="\x1B]1337;File=inline=1";if(B.width)L+=`;width=${B.width}`;if(B.height)L+=`;height=${B.height}`;if(B.preserveAspectRatio===!1)L+=";preserveAspectRatio=0";return L+":"+z.toString("base64")+"\x07"};Q.iTerm={};Q.iTerm.setCwd=(z)=>"\x1B]50;CurrentDir="+(z||process.cwd())+"\x07"});var V=Z((w)=>{Object.defineProperty(w,"__esModule",{value:!0});w.default=void 0;var Kz=o(R("readline")),O=_();function o(z){return z&&z.__esModule?z:{default:z}}class f{constructor(z,B=process.stdout){this.options=z,this.stream=B,this.values=[],this.initialRender=!0}setValues(z){this.values=z}render(z=0){if(this.initialRender)this.initialRender=!1,this.stream.write(O.cursorHide);else this.stream.write(O.eraseLines(this.values.length));this.values.forEach((B,L)=>{let W=z===L?this.options.selected:this.options.unselected,X=" ".repeat(this.options.indentation),A=this.options.valueRenderer(B,z===L),l=L!==this.values.length-1?`
`:"";this.stream.write(X+W+" "+A+l)})}cleanup(){this.stream.write(O.eraseLines(this.values.length)),this.stream.write(O.cursorShow)}}w.default=f});var j=Z((g)=>{Object.defineProperty(g,"__esModule",{value:!0});g.withPromise=g.withCallback=void 0;var e=(z,B,L)=>{z.open(),z.onSelect((W,X)=>L(B(W,X)))};g.withCallback=e;var zz=(z,B)=>{return new Promise((L,W)=>{z.open(),z.onSelect((X,A)=>{if(X===null)W();else L(B(X,A))})})};g.withPromise=zz});var y=Z((m)=>{Object.defineProperty(m,"__esModule",{value:!0});m.withObjectValues=m.withArrayValues=void 0;var Lz=(z)=>{return{input:z.values,output:(B,L)=>{return{id:B,value:L}}}};m.withArrayValues=Lz;var Qz=(z)=>{let B=z.values;return{input:Object.values(B),output:(L,W)=>{return{id:Object.keys(B)[L],value:W}}}};m.withObjectValues=Qz});var p=Z((H,c)=>{Object.defineProperty(H,"__esModule",{value:!0});H.default=void 0;var Xz=v(I()),Yz=v(V()),b=j(),x=y();function v(z){return z&&z.__esModule?z:{default:z}}function Zz(z){for(var B=1;B<arguments.length;B++){var L=arguments[B]!=null?arguments[B]:{},W=Object.keys(L);if(typeof Object.getOwnPropertySymbols==="function")W=W.concat(Object.getOwnPropertySymbols(L).filter(function(X){return Object.getOwnPropertyDescriptor(L,X).enumerable}));W.forEach(function(X){$z(z,X,L[X])})}return z}function $z(z,B,L){if(B in z)Object.defineProperty(z,B,{value:L,enumerable:!0,configurable:!0,writable:!0});else z[B]=L;return z}var Gz={outputStream:process.stdout,inputStream:process.stdin,values:[],defaultValue:0,selected:"(x)",unselected:"( )",indentation:0,cleanup:!0,valueRenderer:(z)=>z},d=(z,B)=>{z=Zz({},Gz,z);let L=new Yz.default(z,z.outputStream),W=new Xz.default(z.inputStream);W.setDefaultValue(z.defaultValue),W.attachRenderer(L);let X;if(Array.isArray(z.values))X=x.withArrayValues(z);else X=x.withObjectValues(z);if(z.values=X.input,W.setValues(z.values),typeof B==="function")return b.withCallback(W,X.output,B);else return b.withPromise(W,X.output)};H=c.exports=d;Object.defineProperty(H,"__esModule",{value:!0});var Hz=d;H.default=Hz});var F=i(p(),1);import Tz from"fs";import qz from"path";var $=process.argv[2]||process.cwd(),q=qz.join($,".docker-publish");if(!Tz.existsSync(q)){console.log("Initializing .docker-publish file..."),console.log("Enter the Docker image name (e.g., energyhun24/bandwidth-hero-proxy)");let z=prompt("Docker image name:");if(!z)console.error("Docker image name is required."),process.exit(1);console.log("Enter the initial version (e.g., 1.0.0)");let B=prompt("Initial version:");if(!B)console.error("Initial version is required."),process.exit(1);let L={dockerImageName:z.trim(),version:B.trim()};await Bun.write(q,JSON.stringify(L,null,"\t")),console.log(".docker-publish file created successfully.")}var E=await Bun.file(q).json(),T=E.dockerImageName,G=E.version,J={Current:G,Patch:C(G,"Patch"),Minor:C(G,"Minor"),Major:C(G,"Major")},Ez=Object.keys(J);console.log("Select the version update type:");var Fz=await F.default({values:Ez,valueRenderer:(z)=>{return`${z} (${J[z]})`},cleanup:!0}),Y=J[Fz.value];console.log(`You selected: ${Y}, current version: ${G}`);console.log("Do you want to build, publish the image and update the version in the .version file?");var Az=await F.default({values:["Yes","No"],valueRenderer:(z)=>{return z},cleanup:!0});console.log("Do you want to push the changes to GIT?");var Cz=await F.default({values:["Yes","No"],valueRenderer:(z)=>{return z},cleanup:!0});if(Az.value==="Yes"){if(E.version=Y,await Bun.write(q,JSON.stringify(E,null,"\t")),console.log(`Version updated to: ${Y}`),await Bun.$`docker build -t ${T}:${Y} -t ${T}:latest ${$}`,await Bun.$`docker push ${T}:${Y}`,await Bun.$`docker push ${T}:latest`,Cz.value==="Yes"&&Y!==G)await Bun.$`cd ${$} && git add .docker-publish`,await Bun.$`cd ${$} && git commit -m "chore: update version to ${Y}"`,await Bun.$`cd ${$} && git push`,await Bun.$`cd ${$} && git checkout main`,console.log("Changes pushed to GIT.")}else console.log("Aborted.");function C(z,B){let L=z.split(".").map(Number);switch(B){case"Major":L[0]++,L[1]=0,L[2]=0;break;case"Minor":L[1]++,L[2]=0;break;case"Patch":L[2]++;break;default:throw new Error("Invalid version type")}return L.join(".")}
